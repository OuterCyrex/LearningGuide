// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: class.proto

package server

import (
	"context"

	"LearningGuide/class_srv/.ClassProto"
	"LearningGuide/class_srv/internal/logic"
	"LearningGuide/class_srv/internal/svc"
)

type ClassServer struct {
	svcCtx *svc.ServiceContext
	__ClassProto.UnimplementedClassServer
}

func NewClassServer(svcCtx *svc.ServiceContext) *ClassServer {
	return &ClassServer{
		svcCtx: svcCtx,
	}
}

func (s *ClassServer) GetCourseList(ctx context.Context, in *__ClassProto.CourseFilterRequest) (*__ClassProto.CourseListResponse, error) {
	l := logic.NewGetCourseListLogic(ctx, s.svcCtx)
	return l.GetCourseList(in)
}

func (s *ClassServer) GetCourseDetail(ctx context.Context, in *__ClassProto.CourseDetailRequest) (*__ClassProto.CourseInfoResponse, error) {
	l := logic.NewGetCourseDetailLogic(ctx, s.svcCtx)
	return l.GetCourseDetail(in)
}

func (s *ClassServer) CreateCourse(ctx context.Context, in *__ClassProto.CreateCourseRequest) (*__ClassProto.CreateCourseResponse, error) {
	l := logic.NewCreateCourseLogic(ctx, s.svcCtx)
	return l.CreateCourse(in)
}

func (s *ClassServer) UpdateCourse(ctx context.Context, in *__ClassProto.UpdateCourseRequest) (*__ClassProto.Empty, error) {
	l := logic.NewUpdateCourseLogic(ctx, s.svcCtx)
	return l.UpdateCourse(in)
}

func (s *ClassServer) DeleteCourse(ctx context.Context, in *__ClassProto.DeleteCourseRequest) (*__ClassProto.Empty, error) {
	l := logic.NewDeleteCourseLogic(ctx, s.svcCtx)
	return l.DeleteCourse(in)
}

func (s *ClassServer) GetLessonList(ctx context.Context, in *__ClassProto.LessonFilterRequest) (*__ClassProto.LessonListResponse, error) {
	l := logic.NewGetLessonListLogic(ctx, s.svcCtx)
	return l.GetLessonList(in)
}

func (s *ClassServer) CreateLesson(ctx context.Context, in *__ClassProto.CreateLessonRequest) (*__ClassProto.CreateLessonResponse, error) {
	l := logic.NewCreateLessonLogic(ctx, s.svcCtx)
	return l.CreateLesson(in)
}

func (s *ClassServer) CreateLessonInBatch(ctx context.Context, in *__ClassProto.CreateLessonBatchRequest) (*__ClassProto.CreateLessonBatchResponse, error) {
	l := logic.NewCreateLessonInBatchLogic(ctx, s.svcCtx)
	return l.CreateLessonInBatch(in)
}

func (s *ClassServer) UpdateLesson(ctx context.Context, in *__ClassProto.UpdateLessonRequest) (*__ClassProto.Empty, error) {
	l := logic.NewUpdateLessonLogic(ctx, s.svcCtx)
	return l.UpdateLesson(in)
}

func (s *ClassServer) DeleteLesson(ctx context.Context, in *__ClassProto.DeleteLessonRequest) (*__ClassProto.Empty, error) {
	l := logic.NewDeleteLessonLogic(ctx, s.svcCtx)
	return l.DeleteLesson(in)
}

func (s *ClassServer) GetLessonDetail(ctx context.Context, in *__ClassProto.LessonDetailRequest) (*__ClassProto.LessonInfoResponse, error) {
	l := logic.NewGetLessonDetailLogic(ctx, s.svcCtx)
	return l.GetLessonDetail(in)
}

func (s *ClassServer) DeleteLessonInBatch(ctx context.Context, in *__ClassProto.DeleteLessonInBatchRequest) (*__ClassProto.Empty, error) {
	l := logic.NewDeleteLessonInBatchLogic(ctx, s.svcCtx)
	return l.DeleteLessonInBatch(in)
}
