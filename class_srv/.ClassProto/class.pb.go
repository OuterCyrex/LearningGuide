// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.0
// source: class.proto

package __ClassProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_class_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{0}
}

type LessonDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LessonDetailRequest) Reset() {
	*x = LessonDetailRequest{}
	mi := &file_class_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LessonDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonDetailRequest) ProtoMessage() {}

func (x *LessonDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonDetailRequest.ProtoReflect.Descriptor instead.
func (*LessonDetailRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{1}
}

func (x *LessonDetailRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteLessonInBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int32                `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
	CourseId      int32                  `protobuf:"varint,2,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	UserId        int32                  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLessonInBatchRequest) Reset() {
	*x = DeleteLessonInBatchRequest{}
	mi := &file_class_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLessonInBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLessonInBatchRequest) ProtoMessage() {}

func (x *DeleteLessonInBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLessonInBatchRequest.ProtoReflect.Descriptor instead.
func (*DeleteLessonInBatchRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteLessonInBatchRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteLessonInBatchRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *DeleteLessonInBatchRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateLessonBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	BeginWeek     int32                  `protobuf:"varint,3,opt,name=BeginWeek,proto3" json:"BeginWeek,omitempty"`
	EndWeek       int32                  `protobuf:"varint,4,opt,name=EndWeek,proto3" json:"EndWeek,omitempty"`
	DayOfWeek     int32                  `protobuf:"varint,5,opt,name=DayOfWeek,proto3" json:"DayOfWeek,omitempty"`
	LessonNum     int32                  `protobuf:"varint,6,opt,name=LessonNum,proto3" json:"LessonNum,omitempty"`
	Begin         string                 `protobuf:"bytes,7,opt,name=Begin,proto3" json:"Begin,omitempty"`
	End           string                 `protobuf:"bytes,8,opt,name=End,proto3" json:"End,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLessonBatchRequest) Reset() {
	*x = CreateLessonBatchRequest{}
	mi := &file_class_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLessonBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonBatchRequest) ProtoMessage() {}

func (x *CreateLessonBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateLessonBatchRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLessonBatchRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CreateLessonBatchRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateLessonBatchRequest) GetBeginWeek() int32 {
	if x != nil {
		return x.BeginWeek
	}
	return 0
}

func (x *CreateLessonBatchRequest) GetEndWeek() int32 {
	if x != nil {
		return x.EndWeek
	}
	return 0
}

func (x *CreateLessonBatchRequest) GetDayOfWeek() int32 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

func (x *CreateLessonBatchRequest) GetLessonNum() int32 {
	if x != nil {
		return x.LessonNum
	}
	return 0
}

func (x *CreateLessonBatchRequest) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *CreateLessonBatchRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type CreateLessonBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int32                `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLessonBatchResponse) Reset() {
	*x = CreateLessonBatchResponse{}
	mi := &file_class_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLessonBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonBatchResponse) ProtoMessage() {}

func (x *CreateLessonBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonBatchResponse.ProtoReflect.Descriptor instead.
func (*CreateLessonBatchResponse) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLessonBatchResponse) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type CourseDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseDetailRequest) Reset() {
	*x = CourseDetailRequest{}
	mi := &file_class_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseDetailRequest) ProtoMessage() {}

func (x *CourseDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseDetailRequest.ProtoReflect.Descriptor instead.
func (*CourseDetailRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{5}
}

func (x *CourseDetailRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateLessonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Begin         string                 `protobuf:"bytes,2,opt,name=Begin,proto3" json:"Begin,omitempty"`
	End           string                 `protobuf:"bytes,3,opt,name=End,proto3" json:"End,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLessonRequest) Reset() {
	*x = UpdateLessonRequest{}
	mi := &file_class_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonRequest) ProtoMessage() {}

func (x *UpdateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonRequest.ProtoReflect.Descriptor instead.
func (*UpdateLessonRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLessonRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLessonRequest) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *UpdateLessonRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type DeleteLessonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLessonRequest) Reset() {
	*x = DeleteLessonRequest{}
	mi := &file_class_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLessonRequest) ProtoMessage() {}

func (x *DeleteLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLessonRequest.ProtoReflect.Descriptor instead.
func (*DeleteLessonRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteLessonRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateLessonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	WeekNum       int32                  `protobuf:"varint,2,opt,name=WeekNum,proto3" json:"WeekNum,omitempty"`
	DayOfWeek     int32                  `protobuf:"varint,3,opt,name=DayOfWeek,proto3" json:"DayOfWeek,omitempty"`
	LessonNum     int32                  `protobuf:"varint,4,opt,name=LessonNum,proto3" json:"LessonNum,omitempty"`
	Begin         string                 `protobuf:"bytes,5,opt,name=Begin,proto3" json:"Begin,omitempty"`
	End           string                 `protobuf:"bytes,6,opt,name=End,proto3" json:"End,omitempty"`
	UserId        int32                  `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLessonRequest) Reset() {
	*x = CreateLessonRequest{}
	mi := &file_class_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonRequest) ProtoMessage() {}

func (x *CreateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonRequest.ProtoReflect.Descriptor instead.
func (*CreateLessonRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{8}
}

func (x *CreateLessonRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CreateLessonRequest) GetWeekNum() int32 {
	if x != nil {
		return x.WeekNum
	}
	return 0
}

func (x *CreateLessonRequest) GetDayOfWeek() int32 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

func (x *CreateLessonRequest) GetLessonNum() int32 {
	if x != nil {
		return x.LessonNum
	}
	return 0
}

func (x *CreateLessonRequest) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *CreateLessonRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *CreateLessonRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateLessonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLessonResponse) Reset() {
	*x = CreateLessonResponse{}
	mi := &file_class_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonResponse) ProtoMessage() {}

func (x *CreateLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonResponse.ProtoReflect.Descriptor instead.
func (*CreateLessonResponse) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{9}
}

func (x *CreateLessonResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LessonFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int32                  `protobuf:"varint,1,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	WeekNum       int32                  `protobuf:"varint,2,opt,name=WeekNum,proto3" json:"WeekNum,omitempty"`
	DayOfWeek     int32                  `protobuf:"varint,3,opt,name=DayOfWeek,proto3" json:"DayOfWeek,omitempty"`
	Term          int32                  `protobuf:"varint,4,opt,name=Term,proto3" json:"Term,omitempty"`
	UserId        int32                  `protobuf:"varint,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LessonFilterRequest) Reset() {
	*x = LessonFilterRequest{}
	mi := &file_class_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LessonFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonFilterRequest) ProtoMessage() {}

func (x *LessonFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonFilterRequest.ProtoReflect.Descriptor instead.
func (*LessonFilterRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{10}
}

func (x *LessonFilterRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *LessonFilterRequest) GetWeekNum() int32 {
	if x != nil {
		return x.WeekNum
	}
	return 0
}

func (x *LessonFilterRequest) GetDayOfWeek() int32 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

func (x *LessonFilterRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LessonFilterRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LessonListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*LessonInfoResponse  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LessonListResponse) Reset() {
	*x = LessonListResponse{}
	mi := &file_class_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LessonListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonListResponse) ProtoMessage() {}

func (x *LessonListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonListResponse.ProtoReflect.Descriptor instead.
func (*LessonListResponse) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{11}
}

func (x *LessonListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LessonListResponse) GetData() []*LessonInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type LessonInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CourseId      int32                  `protobuf:"varint,2,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	WeekNum       int32                  `protobuf:"varint,3,opt,name=WeekNum,proto3" json:"WeekNum,omitempty"`
	DayOfWeek     int32                  `protobuf:"varint,4,opt,name=DayOfWeek,proto3" json:"DayOfWeek,omitempty"`
	LessonNum     int32                  `protobuf:"varint,5,opt,name=LessonNum,proto3" json:"LessonNum,omitempty"`
	Begin         string                 `protobuf:"bytes,6,opt,name=Begin,proto3" json:"Begin,omitempty"`
	End           string                 `protobuf:"bytes,7,opt,name=End,proto3" json:"End,omitempty"`
	Course        *CourseInfoResponse    `protobuf:"bytes,8,opt,name=course,proto3" json:"course,omitempty"`
	Term          int32                  `protobuf:"varint,9,opt,name=Term,proto3" json:"Term,omitempty"`
	UserId        int32                  `protobuf:"varint,10,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LessonInfoResponse) Reset() {
	*x = LessonInfoResponse{}
	mi := &file_class_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LessonInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonInfoResponse) ProtoMessage() {}

func (x *LessonInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonInfoResponse.ProtoReflect.Descriptor instead.
func (*LessonInfoResponse) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{12}
}

func (x *LessonInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LessonInfoResponse) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *LessonInfoResponse) GetWeekNum() int32 {
	if x != nil {
		return x.WeekNum
	}
	return 0
}

func (x *LessonInfoResponse) GetDayOfWeek() int32 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

func (x *LessonInfoResponse) GetLessonNum() int32 {
	if x != nil {
		return x.LessonNum
	}
	return 0
}

func (x *LessonInfoResponse) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *LessonInfoResponse) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LessonInfoResponse) GetCourse() *CourseInfoResponse {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *LessonInfoResponse) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LessonInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CourseFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Term          int32                  `protobuf:"varint,3,opt,name=Term,proto3" json:"Term,omitempty"`
	Teacher       string                 `protobuf:"bytes,4,opt,name=Teacher,proto3" json:"Teacher,omitempty"`
	PageNum       int32                  `protobuf:"varint,5,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	PageSize      int32                  `protobuf:"varint,6,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	UserId        int32                  `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseFilterRequest) Reset() {
	*x = CourseFilterRequest{}
	mi := &file_class_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseFilterRequest) ProtoMessage() {}

func (x *CourseFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseFilterRequest.ProtoReflect.Descriptor instead.
func (*CourseFilterRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{13}
}

func (x *CourseFilterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseFilterRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CourseFilterRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *CourseFilterRequest) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *CourseFilterRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *CourseFilterRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CourseFilterRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CourseListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data          []*CourseInfoResponse  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseListResponse) Reset() {
	*x = CourseListResponse{}
	mi := &file_class_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseListResponse) ProtoMessage() {}

func (x *CourseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseListResponse.ProtoReflect.Descriptor instead.
func (*CourseListResponse) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{14}
}

func (x *CourseListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CourseListResponse) GetData() []*CourseInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCourseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCourseRequest) Reset() {
	*x = DeleteCourseRequest{}
	mi := &file_class_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCourseRequest) ProtoMessage() {}

func (x *DeleteCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCourseRequest.ProtoReflect.Descriptor instead.
func (*DeleteCourseRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCourseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CourseInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	CourseSn      string                 `protobuf:"bytes,4,opt,name=CourseSn,proto3" json:"CourseSn,omitempty"`
	Term          int32                  `protobuf:"varint,5,opt,name=Term,proto3" json:"Term,omitempty"`
	LessonTotal   int32                  `protobuf:"varint,6,opt,name=LessonTotal,proto3" json:"LessonTotal,omitempty"`
	Desc          string                 `protobuf:"bytes,7,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Image         string                 `protobuf:"bytes,8,opt,name=Image,proto3" json:"Image,omitempty"`
	Teacher       string                 `protobuf:"bytes,9,opt,name=Teacher,proto3" json:"Teacher,omitempty"`
	Credit        float32                `protobuf:"fixed32,10,opt,name=Credit,proto3" json:"Credit,omitempty"`
	UserId        int32                  `protobuf:"varint,11,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseInfoResponse) Reset() {
	*x = CourseInfoResponse{}
	mi := &file_class_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseInfoResponse) ProtoMessage() {}

func (x *CourseInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseInfoResponse.ProtoReflect.Descriptor instead.
func (*CourseInfoResponse) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{16}
}

func (x *CourseInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseInfoResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CourseInfoResponse) GetCourseSn() string {
	if x != nil {
		return x.CourseSn
	}
	return ""
}

func (x *CourseInfoResponse) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *CourseInfoResponse) GetLessonTotal() int32 {
	if x != nil {
		return x.LessonTotal
	}
	return 0
}

func (x *CourseInfoResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseInfoResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CourseInfoResponse) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *CourseInfoResponse) GetCredit() float32 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *CourseInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateCourseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc          string                 `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Image         string                 `protobuf:"bytes,4,opt,name=Image,proto3" json:"Image,omitempty"`
	Teacher       string                 `protobuf:"bytes,5,opt,name=Teacher,proto3" json:"Teacher,omitempty"`
	Credit        float32                `protobuf:"fixed32,6,opt,name=Credit,proto3" json:"Credit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCourseRequest) Reset() {
	*x = UpdateCourseRequest{}
	mi := &file_class_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourseRequest) ProtoMessage() {}

func (x *UpdateCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourseRequest.ProtoReflect.Descriptor instead.
func (*UpdateCourseRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateCourseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCourseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCourseRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateCourseRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdateCourseRequest) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *UpdateCourseRequest) GetCredit() float32 {
	if x != nil {
		return x.Credit
	}
	return 0
}

type CreateCourseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Term          int32                  `protobuf:"varint,3,opt,name=Term,proto3" json:"Term,omitempty"`
	Desc          string                 `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Image         string                 `protobuf:"bytes,5,opt,name=Image,proto3" json:"Image,omitempty"`
	Credit        float32                `protobuf:"fixed32,6,opt,name=Credit,proto3" json:"Credit,omitempty"`
	Teacher       string                 `protobuf:"bytes,7,opt,name=Teacher,proto3" json:"Teacher,omitempty"`
	UserId        int32                  `protobuf:"varint,8,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCourseRequest) Reset() {
	*x = CreateCourseRequest{}
	mi := &file_class_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourseRequest) ProtoMessage() {}

func (x *CreateCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourseRequest.ProtoReflect.Descriptor instead.
func (*CreateCourseRequest) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{18}
}

func (x *CreateCourseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCourseRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateCourseRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *CreateCourseRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateCourseRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateCourseRequest) GetCredit() float32 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *CreateCourseRequest) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *CreateCourseRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateCourseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCourseResponse) Reset() {
	*x = CreateCourseResponse{}
	mi := &file_class_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourseResponse) ProtoMessage() {}

func (x *CreateCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourseResponse.ProtoReflect.Descriptor instead.
func (*CreateCourseResponse) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{19}
}

func (x *CreateCourseResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_class_proto protoreflect.FileDescriptor

var file_class_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x0a,
	0x13, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x57, 0x65,
	0x65, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x57, 0x65, 0x65,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x45, 0x6e, 0x64, 0x22, 0x2d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x49, 0x64, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x4e, 0x75, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x1c, 0x0a,
	0x09, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x4e, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x12, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9d, 0x02, 0x0a, 0x12, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x65,
	0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x65, 0x65, 0x6b,
	0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65,
	0x72, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x59, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x92, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x32, 0xc7, 0x06, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x1a, 0x2e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x1f, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x38, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12,
	0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_class_proto_rawDescOnce sync.Once
	file_class_proto_rawDescData []byte
)

func file_class_proto_rawDescGZIP() []byte {
	file_class_proto_rawDescOnce.Do(func() {
		file_class_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_class_proto_rawDesc), len(file_class_proto_rawDesc)))
	})
	return file_class_proto_rawDescData
}

var file_class_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_class_proto_goTypes = []any{
	(*Empty)(nil),                      // 0: class.Empty
	(*LessonDetailRequest)(nil),        // 1: class.LessonDetailRequest
	(*DeleteLessonInBatchRequest)(nil), // 2: class.DeleteLessonInBatchRequest
	(*CreateLessonBatchRequest)(nil),   // 3: class.CreateLessonBatchRequest
	(*CreateLessonBatchResponse)(nil),  // 4: class.CreateLessonBatchResponse
	(*CourseDetailRequest)(nil),        // 5: class.CourseDetailRequest
	(*UpdateLessonRequest)(nil),        // 6: class.UpdateLessonRequest
	(*DeleteLessonRequest)(nil),        // 7: class.DeleteLessonRequest
	(*CreateLessonRequest)(nil),        // 8: class.CreateLessonRequest
	(*CreateLessonResponse)(nil),       // 9: class.CreateLessonResponse
	(*LessonFilterRequest)(nil),        // 10: class.LessonFilterRequest
	(*LessonListResponse)(nil),         // 11: class.LessonListResponse
	(*LessonInfoResponse)(nil),         // 12: class.LessonInfoResponse
	(*CourseFilterRequest)(nil),        // 13: class.CourseFilterRequest
	(*CourseListResponse)(nil),         // 14: class.CourseListResponse
	(*DeleteCourseRequest)(nil),        // 15: class.DeleteCourseRequest
	(*CourseInfoResponse)(nil),         // 16: class.CourseInfoResponse
	(*UpdateCourseRequest)(nil),        // 17: class.UpdateCourseRequest
	(*CreateCourseRequest)(nil),        // 18: class.CreateCourseRequest
	(*CreateCourseResponse)(nil),       // 19: class.CreateCourseResponse
}
var file_class_proto_depIdxs = []int32{
	12, // 0: class.LessonListResponse.data:type_name -> class.LessonInfoResponse
	16, // 1: class.LessonInfoResponse.course:type_name -> class.CourseInfoResponse
	16, // 2: class.CourseListResponse.data:type_name -> class.CourseInfoResponse
	13, // 3: class.Class.GetCourseList:input_type -> class.CourseFilterRequest
	5,  // 4: class.Class.GetCourseDetail:input_type -> class.CourseDetailRequest
	18, // 5: class.Class.CreateCourse:input_type -> class.CreateCourseRequest
	17, // 6: class.Class.UpdateCourse:input_type -> class.UpdateCourseRequest
	15, // 7: class.Class.DeleteCourse:input_type -> class.DeleteCourseRequest
	10, // 8: class.Class.GetLessonList:input_type -> class.LessonFilterRequest
	8,  // 9: class.Class.CreateLesson:input_type -> class.CreateLessonRequest
	3,  // 10: class.Class.CreateLessonInBatch:input_type -> class.CreateLessonBatchRequest
	6,  // 11: class.Class.UpdateLesson:input_type -> class.UpdateLessonRequest
	7,  // 12: class.Class.DeleteLesson:input_type -> class.DeleteLessonRequest
	1,  // 13: class.Class.GetLessonDetail:input_type -> class.LessonDetailRequest
	2,  // 14: class.Class.DeleteLessonInBatch:input_type -> class.DeleteLessonInBatchRequest
	14, // 15: class.Class.GetCourseList:output_type -> class.CourseListResponse
	16, // 16: class.Class.GetCourseDetail:output_type -> class.CourseInfoResponse
	19, // 17: class.Class.CreateCourse:output_type -> class.CreateCourseResponse
	0,  // 18: class.Class.UpdateCourse:output_type -> class.Empty
	0,  // 19: class.Class.DeleteCourse:output_type -> class.Empty
	11, // 20: class.Class.GetLessonList:output_type -> class.LessonListResponse
	9,  // 21: class.Class.CreateLesson:output_type -> class.CreateLessonResponse
	4,  // 22: class.Class.CreateLessonInBatch:output_type -> class.CreateLessonBatchResponse
	0,  // 23: class.Class.UpdateLesson:output_type -> class.Empty
	0,  // 24: class.Class.DeleteLesson:output_type -> class.Empty
	12, // 25: class.Class.GetLessonDetail:output_type -> class.LessonInfoResponse
	0,  // 26: class.Class.DeleteLessonInBatch:output_type -> class.Empty
	15, // [15:27] is the sub-list for method output_type
	3,  // [3:15] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_class_proto_init() }
func file_class_proto_init() {
	if File_class_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_class_proto_rawDesc), len(file_class_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_class_proto_goTypes,
		DependencyIndexes: file_class_proto_depIdxs,
		MessageInfos:      file_class_proto_msgTypes,
	}.Build()
	File_class_proto = out.File
	file_class_proto_goTypes = nil
	file_class_proto_depIdxs = nil
}
