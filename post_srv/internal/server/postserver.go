// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: post.proto

package server

import (
	"context"

	"LearningGuide/post_srv/.PostProto"
	"LearningGuide/post_srv/internal/logic"
	"LearningGuide/post_srv/internal/svc"
)

type PostServer struct {
	svcCtx *svc.ServiceContext
	__PostProto.UnimplementedPostServer
}

func NewPostServer(svcCtx *svc.ServiceContext) *PostServer {
	return &PostServer{
		svcCtx: svcCtx,
	}
}

func (s *PostServer) NewPost(ctx context.Context, in *__PostProto.NewPostRequest) (*__PostProto.NewPostResponse, error) {
	l := logic.NewNewPostLogic(ctx, s.svcCtx)
	return l.NewPost(in)
}

func (s *PostServer) GetPost(ctx context.Context, in *__PostProto.PostID) (*__PostProto.PostInfoResponse, error) {
	l := logic.NewGetPostLogic(ctx, s.svcCtx)
	return l.GetPost(in)
}

func (s *PostServer) PostList(ctx context.Context, in *__PostProto.PostFilterRequest) (*__PostProto.PostListResponse, error) {
	l := logic.NewPostListLogic(ctx, s.svcCtx)
	return l.PostList(in)
}

func (s *PostServer) UpdatePost(ctx context.Context, in *__PostProto.UpdatePostRequest) (*__PostProto.Empty, error) {
	l := logic.NewUpdatePostLogic(ctx, s.svcCtx)
	return l.UpdatePost(in)
}

func (s *PostServer) DeletePost(ctx context.Context, in *__PostProto.DeletePostRequest) (*__PostProto.Empty, error) {
	l := logic.NewDeletePostLogic(ctx, s.svcCtx)
	return l.DeletePost(in)
}

func (s *PostServer) NewLike(ctx context.Context, in *__PostProto.NewLikeRequest) (*__PostProto.Empty, error) {
	l := logic.NewNewLikeLogic(ctx, s.svcCtx)
	return l.NewLike(in)
}

func (s *PostServer) PostListByLike(ctx context.Context, in *__PostProto.LikeListRequest) (*__PostProto.PostListResponse, error) {
	l := logic.NewPostListByLikeLogic(ctx, s.svcCtx)
	return l.PostListByLike(in)
}

func (s *PostServer) DeleteLike(ctx context.Context, in *__PostProto.DeleteLikeRequest) (*__PostProto.Empty, error) {
	l := logic.NewDeleteLikeLogic(ctx, s.svcCtx)
	return l.DeleteLike(in)
}

func (s *PostServer) NewFav(ctx context.Context, in *__PostProto.NewFavRequest) (*__PostProto.Empty, error) {
	l := logic.NewNewFavLogic(ctx, s.svcCtx)
	return l.NewFav(in)
}

func (s *PostServer) PostListByFav(ctx context.Context, in *__PostProto.FavListRequest) (*__PostProto.PostListResponse, error) {
	l := logic.NewPostListByFavLogic(ctx, s.svcCtx)
	return l.PostListByFav(in)
}

func (s *PostServer) DeleteFav(ctx context.Context, in *__PostProto.DeleteFavRequest) (*__PostProto.Empty, error) {
	l := logic.NewDeleteFavLogic(ctx, s.svcCtx)
	return l.DeleteFav(in)
}

func (s *PostServer) NewComment(ctx context.Context, in *__PostProto.NewCommentRequest) (*__PostProto.NewCommentResponse, error) {
	l := logic.NewNewCommentLogic(ctx, s.svcCtx)
	return l.NewComment(in)
}

func (s *PostServer) CommentList(ctx context.Context, in *__PostProto.CommentFilterRequest) (*__PostProto.CommentListResponse, error) {
	l := logic.NewCommentListLogic(ctx, s.svcCtx)
	return l.CommentList(in)
}

func (s *PostServer) DeleteComment(ctx context.Context, in *__PostProto.DeleteCommentRequest) (*__PostProto.Empty, error) {
	l := logic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

func (s *PostServer) GetNoticeList(ctx context.Context, in *__PostProto.NoticeFilterRequest) (*__PostProto.NoticeListResponse, error) {
	l := logic.NewGetNoticeListLogic(ctx, s.svcCtx)
	return l.GetNoticeList(in)
}

func (s *PostServer) UpdateNoticeList(ctx context.Context, in *__PostProto.NoticeUpdateRequest) (*__PostProto.Empty, error) {
	l := logic.NewUpdateNoticeListLogic(ctx, s.svcCtx)
	return l.UpdateNoticeList(in)
}

func (s *PostServer) CheckNotice(ctx context.Context, in *__PostProto.CheckNoticeRequest) (*__PostProto.CheckNoticeResponse, error) {
	l := logic.NewCheckNoticeLogic(ctx, s.svcCtx)
	return l.CheckNotice(in)
}
